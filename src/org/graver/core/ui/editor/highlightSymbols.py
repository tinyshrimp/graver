'''
Created on Jun 15, 2010

@author: tinyshrimp
'''

import wx.stc as stc

NULL_SYMBOLS = {    'default':stc.STC_STYLE_DEFAULT,
                    'linenumber':stc.STC_STYLE_LINENUMBER,
                    'bracelight':stc.STC_STYLE_BRACELIGHT,
                    'bracebad':stc.STC_STYLE_BRACEBAD,
                    'controlchar':stc.STC_STYLE_CONTROLCHAR,
                    'indentguide':stc.STC_STYLE_INDENTGUIDE,
                    'calltip':stc.STC_STYLE_CALLTIP,
                    'lastpredefined':stc.STC_STYLE_LASTPREDEFINED,
                    'max':stc.STC_STYLE_MAX
                }

ADA_SYMBOLS = {     'character':stc.STC_ADA_CHARACTER,
                    'charactereol':stc.STC_ADA_CHARACTEREOL,
                    'commentline':stc.STC_ADA_COMMENTLINE,
                    'default':stc.STC_ADA_DEFAULT,
                    'delimiter':stc.STC_ADA_DELIMITER,
                    'identifier':stc.STC_ADA_IDENTIFIER,
                    'illegal':stc.STC_ADA_ILLEGAL,
                    'label':stc.STC_ADA_LABEL,
                    'number':stc.STC_ADA_NUMBER,
                    'string':stc.STC_ADA_STRING,
                    'stringeol':stc.STC_ADA_STRINGEOL,
                    'word':stc.STC_ADA_WORD
               }

APDL_SYMBOLS = {    'argument':stc.STC_APDL_ARGUMENT,
                    'command':stc.STC_APDL_COMMAND,
                    'comment':stc.STC_APDL_COMMENT,
                    'commentblock':stc.STC_APDL_COMMENTBLOCK,
                    'default':stc.STC_APDL_DEFAULT,
                    'function':stc.STC_APDL_FUNCTION,
                    'number':stc.STC_APDL_NUMBER,
                    'operator':stc.STC_APDL_OPERATOR,
                    'processor':stc.STC_APDL_PROCESSOR,
                    'slashcommand':stc.STC_APDL_SLASHCOMMAND,
                    'starcommand':stc.STC_APDL_STARCOMMAND,
                    'string':stc.STC_APDL_STRING,
                    'word':stc.STC_APDL_WORD
                }

ASM_SYMBOLS = {     'character':stc.STC_ASM_CHARACTER,
                    'comment':stc.STC_ASM_COMMENT,
                    'commentblock':stc.STC_ASM_COMMENTBLOCK,
                    'cpuinstruction':stc.STC_ASM_CPUINSTRUCTION,
                    'default':stc.STC_ASM_DEFAULT,
                    'directive':stc.STC_ASM_DIRECTIVE,
                    'directiveoperand':stc.STC_ASM_DIRECTIVEOPERAND,
                    'extinstruction':stc.STC_ASM_EXTINSTRUCTION,
                    'identifier':stc.STC_ASM_IDENTIFIER,
                    'mathinstruction':stc.STC_ASM_MATHINSTRUCTION,
                    'number':stc.STC_ASM_NUMBER,
                    'operator':stc.STC_ASM_OPERATOR,
                    'register':stc.STC_ASM_REGISTER,
                    'string':stc.STC_ASM_STRING,
                    'stringeol':stc.STC_ASM_STRINGEOL
               }

ASN1_SYMBOLS = {    'attribute':stc.STC_ASN1_ATTRIBUTE,
                    'comment':stc.STC_ASN1_COMMENT,
                    'default':stc.STC_ASN1_DEFAULT,
                    'descriptor':stc.STC_ASN1_DESCRIPTOR,
                    'identifier':stc.STC_ASN1_IDENTIFIER,
                    'keyword':stc.STC_ASN1_KEYWORD,
                    'oid':stc.STC_ASN1_OID,
                    'operator':stc.STC_ASN1_OPERATOR,
                    'scalar':stc.STC_ASN1_SCALAR,
                    'string':stc.STC_ASN1_STRING,
                    'type':stc.STC_ASN1_TYPE
                }

AU3_SYMBOLS = {     'comment':stc.STC_AU3_COMMENT,
                    'commentblock':stc.STC_AU3_COMMENTBLOCK,
                    'comobj':stc.STC_AU3_COMOBJ,
                    'default':stc.STC_AU3_DEFAULT,
                    'expand':stc.STC_AU3_EXPAND,
                    'function':stc.STC_AU3_FUNCTION,
                    'keyword':stc.STC_AU3_KEYWORD,
                    'macro':stc.STC_AU3_MACRO,
                    'number':stc.STC_AU3_NUMBER,
                    'operator':stc.STC_AU3_OPERATOR,
                    'preprocessor':stc.STC_AU3_PREPROCESSOR,
                    'sent':stc.STC_AU3_SENT,
                    'special':stc.STC_AU3_SPECIAL,
                    'string':stc.STC_AU3_STRING,
                    'udf':stc.STC_AU3_UDF,
                    'variable':stc.STC_AU3_VARIABLE
               }

AVE_SYMBOLS = {     'comment':stc.STC_AVE_COMMENT,
                    'default':stc.STC_AVE_DEFAULT,
                    'enum':stc.STC_AVE_ENUM,
                    'identifier':stc.STC_AVE_IDENTIFIER,
                    'number':stc.STC_AVE_NUMBER,
                    'operator':stc.STC_AVE_OPERATOR,
                    'string':stc.STC_AVE_STRING,
                    'stringeol':stc.STC_AVE_STRINGEOL,
                    'word':stc.STC_AVE_WORD,
                    'word1':stc.STC_AVE_WORD1,
                    'word2':stc.STC_AVE_WORD2,
                    'word3':stc.STC_AVE_WORD3,
                    'word4':stc.STC_AVE_WORD4,
                    'word5':stc.STC_AVE_WORD5,
                    'word6':stc.STC_AVE_WORD6
               }

BAAN_SYMBOLS = {    'comment':stc.STC_BAAN_COMMENT,
                    'commentdoc':stc.STC_BAAN_COMMENTDOC,
                    'default':stc.STC_BAAN_DEFAULT,
                    'identifier':stc.STC_BAAN_IDENTIFIER,
                    'number':stc.STC_BAAN_NUMBER,
                    'operator':stc.STC_BAAN_OPERATOR,
                    'preprocessor':stc.STC_BAAN_PREPROCESSOR,
                    'string':stc.STC_BAAN_STRING,
                    'stringeol':stc.STC_BAAN_STRINGEOL,
                    'word':stc.STC_BAAN_WORD,
                    'word2':stc.STC_BAAN_WORD2
                }

BASH_SYMBOLS = {    'backticks':stc.STC_SH_BACKTICKS,
                    'character':stc.STC_SH_CHARACTER,
                    'commentline':stc.STC_SH_COMMENTLINE,
                    'default':stc.STC_SH_DEFAULT,
                    'error':stc.STC_SH_ERROR,
                    'heredelim':stc.STC_SH_HERE_DELIM,
                    'hereq':stc.STC_SH_HERE_Q,
                    'identifier':stc.STC_SH_IDENTIFIER,
                    'number':stc.STC_SH_NUMBER,
                    'operator':stc.STC_SH_OPERATOR,
                    'param':stc.STC_SH_PARAM,
                    'scalar':stc.STC_SH_SCALAR,
                    'string':stc.STC_SH_STRING,
                    'word':stc.STC_SH_WORD
                }

BATCH_SYMBOLS = {   'command':stc.STC_BAT_COMMAND,
                    'comment':stc.STC_BAT_COMMENT,
                    'default':stc.STC_BAT_DEFAULT,
                    'hide':stc.STC_BAT_HIDE,
                    'identifier':stc.STC_BAT_IDENTIFIER,
                    'label':stc.STC_BAT_LABEL,
                    'operator':stc.STC_BAT_OPERATOR,
                    'word':stc.STC_BAT_WORD
                }

CAML_SYMBOLS = {    'char':stc.STC_CAML_CHAR,
                    'comment':stc.STC_CAML_COMMENT,
                    'comment1':stc.STC_CAML_COMMENT1,
                    'comment2':stc.STC_CAML_COMMENT2,
                    'comment3':stc.STC_CAML_COMMENT3,
                    'default':stc.STC_CAML_DEFAULT,
                    'identifier':stc.STC_CAML_IDENTIFIER,
                    'keyword':stc.STC_CAML_KEYWORD,
                    'keyword2':stc.STC_CAML_KEYWORD2,
                    'keyword3':stc.STC_CAML_KEYWORD3,
                    'linenum':stc.STC_CAML_LINENUM,
                    'number':stc.STC_CAML_NUMBER,
                    'operator':stc.STC_CAML_OPERATOR,
                    'string':stc.STC_CAML_STRING,
                    'tagname':stc.STC_CAML_TAGNAME
                }

CLW_SYMBOLS = {     'attribute':stc.STC_CLW_ATTRIBUTE,
                    'builtinproceduresfunction':stc.STC_CLW_BUILTIN_PROCEDURES_FUNCTION,
                    'comment':stc.STC_CLW_COMMENT,
                    'compilerdirective':stc.STC_CLW_COMPILER_DIRECTIVE,
                    'default':stc.STC_CLW_DEFAULT,
                    'deprecated':stc.STC_CLW_DEPRECATED,
                    'error':stc.STC_CLW_ERROR,
                    'integerconstant':stc.STC_CLW_INTEGER_CONSTANT,
                    'keyword':stc.STC_CLW_KEYWORD,
                    'label':stc.STC_CLW_LABEL,
                    'picturestring':stc.STC_CLW_PICTURE_STRING,
                    'realconstant':stc.STC_CLW_REAL_CONSTANT,
                    'runtimeexpressions':stc.STC_CLW_RUNTIME_EXPRESSIONS,
                    'standardequate':stc.STC_CLW_STANDARD_EQUATE,
                    'string':stc.STC_CLW_STRING,
                    'structuredatatype':stc.STC_CLW_STRUCTURE_DATA_TYPE,
                    'useridentifier':stc.STC_CLW_USER_IDENTIFIER
               }

CONF_SYMBOLS = {    'comment':stc.STC_CONF_COMMENT,
                    'default':stc.STC_CONF_DEFAULT,
                    'directive':stc.STC_CONF_DIRECTIVE,
                    'extension':stc.STC_CONF_EXTENSION,
                    'identifier':stc.STC_CONF_IDENTIFIER,
                    'ip':stc.STC_CONF_IP,
                    'number':stc.STC_CONF_NUMBER,
                    'operator':stc.STC_CONF_OPERATOR,
                    'parameter':stc.STC_CONF_PARAMETER,
                    'string':stc.STC_CONF_STRING
                }

CPP_SYMBOLS = {     'default':stc.STC_C_DEFAULT,
                    'comment':stc.STC_C_COMMENT,
                    'commentline':stc.STC_C_COMMENTLINE,
                    'commentdoc':stc.STC_C_COMMENTDOC,
                    'number':stc.STC_C_NUMBER,
                    'word':stc.STC_C_WORD,
                    'string':stc.STC_C_STRING,
                    'character':stc.STC_C_CHARACTER,
                    'uuid':stc.STC_C_UUID,
                    'preprocessor':stc.STC_C_PREPROCESSOR,
                    'operator':stc.STC_C_OPERATOR,
                    'identifier':stc.STC_C_IDENTIFIER,
                    'stringeol':stc.STC_C_STRINGEOL,
                    'verbatim':stc.STC_C_VERBATIM,
                    'regex':stc.STC_C_REGEX,
                    'commentlinedoc':stc.STC_C_COMMENTLINEDOC,
                    'word2':stc.STC_C_WORD2,
                    'commentdockeyword':stc.STC_C_COMMENTDOCKEYWORD,
                    'commentdockeyworderror':stc.STC_C_COMMENTDOCKEYWORDERROR,
                    'globalclass':stc.STC_C_GLOBALCLASS
                }

CSOUND_SYMBOLS = {  'aratevar':stc.STC_CSOUND_ARATE_VAR,
                    'comment':stc.STC_CSOUND_COMMENT,
                    'commentblock':stc.STC_CSOUND_COMMENTBLOCK,
                    'default':stc.STC_CSOUND_DEFAULT,
                    'globalvar':stc.STC_CSOUND_GLOBAL_VAR,
                    'headerstmt':stc.STC_CSOUND_HEADERSTMT,
                    'identifier':stc.STC_CSOUND_IDENTIFIER,
                    'instr':stc.STC_CSOUND_INSTR,
                    'iratevar':stc.STC_CSOUND_IRATE_VAR,
                    'kratevar':stc.STC_CSOUND_KRATE_VAR,
                    'number':stc.STC_CSOUND_NUMBER,
                    'opcode':stc.STC_CSOUND_OPCODE,
                    'operator':stc.STC_CSOUND_OPERATOR,
                    'param':stc.STC_CSOUND_PARAM,
                    'stringeol':stc.STC_CSOUND_STRINGEOL,
                    'userkeyword':stc.STC_CSOUND_USERKEYWORD
                  }

CSS_SYMBOLS = {     'attribute':stc.STC_CSS_ATTRIBUTE,
                    'class':stc.STC_CSS_CLASS,
                    'comment':stc.STC_CSS_COMMENT,
                    'default':stc.STC_CSS_DEFAULT,
                    'directive':stc.STC_CSS_DIRECTIVE,
                    'doublestring':stc.STC_CSS_DOUBLESTRING,
                    'id':stc.STC_CSS_ID,
                    'identifier':stc.STC_CSS_IDENTIFIER,
                    'identifier2':stc.STC_CSS_IDENTIFIER2,
                    'important':stc.STC_CSS_IMPORTANT,
                    'operator':stc.STC_CSS_OPERATOR,
                    'pseudoclass':stc.STC_CSS_PSEUDOCLASS,
                    'singlestring':stc.STC_CSS_SINGLESTRING,
                    'tag':stc.STC_CSS_TAG,
                    'unknownidentifier':stc.STC_CSS_UNKNOWN_IDENTIFIER,
                    'unknownpseudoclass':stc.STC_CSS_UNKNOWN_PSEUDOCLASS,
                    'value':stc.STC_CSS_VALUE
               }

HTML_SYMBOLS = {    'hbacommentline':stc.STC_HBA_COMMENTLINE,
                    'hbadefault':stc.STC_HBA_DEFAULT,
                    'hbaidentifier':stc.STC_HBA_IDENTIFIER,
                    'hbanumber':stc.STC_HBA_NUMBER,
                    'hbastart':stc.STC_HBA_START,
                    'hbastring':stc.STC_HBA_STRING,
                    'hbastringeol':stc.STC_HBA_STRINGEOL,
                    'hbaword':stc.STC_HBA_WORD,
                    'hjacomment':stc.STC_HJA_COMMENT,
                    'hjacommentdoc':stc.STC_HJA_COMMENTDOC,
                    'hjacommentline':stc.STC_HJA_COMMENTLINE,
                    'hjadefault':stc.STC_HJA_DEFAULT,
                    'hjadoublestring':stc.STC_HJA_DOUBLESTRING,
                    'hjakeyword':stc.STC_HJA_KEYWORD,
                    'hjanumber':stc.STC_HJA_NUMBER,
                    'hjaregex':stc.STC_HJA_REGEX,
                    'hjasinglestring':stc.STC_HJA_SINGLESTRING,
                    'hjastart':stc.STC_HJA_START,
                    'hjastringeol':stc.STC_HJA_STRINGEOL,
                    'hjasymbols':stc.STC_HJA_SYMBOLS,
                    'hjaword':stc.STC_HJA_WORD,
                    'hjcomment':stc.STC_HJ_COMMENT,
                    'hjcommentdoc':stc.STC_HJ_COMMENTDOC,
                    'hjcommentline':stc.STC_HJ_COMMENTLINE,
                    'hjdefault':stc.STC_HJ_DEFAULT,
                    'hjdoublestring':stc.STC_HJ_DOUBLESTRING,
                    'hjkeyword':stc.STC_HJ_KEYWORD,
                    'hjnumber':stc.STC_HJ_NUMBER,
                    'hjregex':stc.STC_HJ_REGEX,
                    'hjsinglestring':stc.STC_HJ_SINGLESTRING,
                    'hjstart':stc.STC_HJ_START,
                    'hjstringeol':stc.STC_HJ_STRINGEOL,
                    'hjsymbols':stc.STC_HJ_SYMBOLS,
                    'hjword':stc.STC_HJ_WORD,
                    'asp':stc.STC_H_ASP,
                    'aspat':stc.STC_H_ASPAT,
                    'attribute':stc.STC_H_ATTRIBUTE,
                    'attrubuteunknown':stc.STC_H_ATTRIBUTEUNKNOWN,
                    'cdata':stc.STC_H_CDATA,
                    'comment':stc.STC_H_COMMENT,
                    'default':stc.STC_H_DEFAULT,
                    'doublestring':stc.STC_H_DOUBLESTRING,
                    'entity':stc.STC_H_ENTITY,
                    'number':stc.STC_H_NUMBER,
                    'other':stc.STC_H_OTHER,
                    'question':stc.STC_H_QUESTION,
                    'script':stc.STC_H_SCRIPT,
                    'sgml1stparam':stc.STC_H_SGML_1ST_PARAM,
                    'sgml1stparamcomment':stc.STC_H_SGML_1ST_PARAM_COMMENT,
                    'sgmlblockdefault':stc.STC_H_SGML_BLOCK_DEFAULT,
                    'sgmlcommand':stc.STC_H_SGML_COMMAND,
                    'sgmlcomment':stc.STC_H_SGML_COMMENT,
                    'sgmldefault':stc.STC_H_SGML_DEFAULT,
                    'sgmldoublestring':stc.STC_H_SGML_DOUBLESTRING,
                    'sgmlentity':stc.STC_H_SGML_ENTITY,
                    'sgmlerror':stc.STC_H_SGML_ERROR,
                    'sgmlsimplestring':stc.STC_H_SGML_SIMPLESTRING,
                    'sgmlspecial':stc.STC_H_SGML_SPECIAL,
                    'singlestring':stc.STC_H_SINGLESTRING,
                    'tag':stc.STC_H_TAG,
                    'tagend':stc.STC_H_TAGEND,
                    'tagunknown':stc.STC_H_TAGUNKNOWN,
                    'value':stc.STC_H_VALUE,
                    'xccomment':stc.STC_H_XCCOMMENT,
                    'xmlend':stc.STC_H_XMLEND,
                    'xmlstart':stc.STC_H_XMLSTART
                }


PERL_SYMBOLS = {    'default':stc.STC_PL_DEFAULT,
                    'error':stc.STC_PL_ERROR,
                    'commentline':stc.STC_PL_COMMENTLINE,
                    'pod':stc.STC_PL_POD,
                    'number':stc.STC_PL_NUMBER,
                    'word':stc.STC_PL_WORD,
                    'string':stc.STC_PL_STRING,
                    'character':stc.STC_PL_CHARACTER,
                    'punctuation':stc.STC_PL_PUNCTUATION,
                    'preprocessor':stc.STC_PL_PREPROCESSOR,
                    'operator':stc.STC_PL_OPERATOR,
                    'identifier':stc.STC_PL_IDENTIFIER,
                    'scaler':stc.STC_PL_SCALAR,
                    'array':stc.STC_PL_ARRAY,
                    'hash':stc.STC_PL_HASH,
                    'symboltable':stc.STC_PL_SYMBOLTABLE,
                    'variableindexer':stc.STC_PL_VARIABLE_INDEXER,
                    'regex':stc.STC_PL_REGEX,
                    'regsubst':stc.STC_PL_REGSUBST,
                    'longquote':stc.STC_PL_LONGQUOTE,
                    'backticks':stc.STC_PL_BACKTICKS,
                    'datasection':stc.STC_PL_DATASECTION,
                    'heredelim':stc.STC_PL_HERE_DELIM,
                    'hereq':stc.STC_PL_HERE_Q,
                    'hereqq':stc.STC_PL_HERE_QQ,
                    'hereqx':stc.STC_PL_HERE_QX,
                    'stringq':stc.STC_PL_STRING_Q,
                    'stringqq':stc.STC_PL_STRING_QQ,
                    'stringqx':stc.STC_PL_STRING_QX,
                    'stringqr':stc.STC_PL_STRING_QR,
                    'stringqw':stc.STC_PL_STRING_QW,
                    'podverb':stc.STC_PL_POD_VERB
                }

PYTHON_SYMBOLS = {  'default':stc.STC_P_DEFAULT, 
                    'commentline':stc.STC_P_COMMENTLINE,  
                    'number':stc.STC_P_NUMBER,  
                    'string':stc.STC_P_STRING,  
                    'character':stc.STC_P_CHARACTER, 
                    'word':stc.STC_P_WORD,  
                    'triple':stc.STC_P_TRIPLE,  
                    'tripledouble':stc.STC_P_TRIPLEDOUBLE,  
                    'classname':stc.STC_P_CLASSNAME,  
                    'defname':stc.STC_P_DEFNAME, 
                    'operator':stc.STC_P_OPERATOR,  
                    'identifier':stc.STC_P_IDENTIFIER,  
                    'commentblock':stc.STC_P_COMMENTBLOCK,  
                    'stringeol':stc.STC_P_STRINGEOL,
                    'word2':stc.STC_P_WORD2,
                    'decorator':stc.STC_P_DECORATOR
                }

RUBY_SYMBOLS = {    'default':stc.STC_RB_DEFAULT,
                    'error':stc.STC_RB_ERROR,
                    'commentline':stc.STC_RB_COMMENTLINE,
                    'pod':stc.STC_RB_POD,
                    'number':stc.STC_RB_NUMBER,
                    'word':stc.STC_RB_WORD,
                    'string':stc.STC_RB_STRING,
                    'character':stc.STC_RB_CHARACTER,
                    'classname':stc.STC_RB_CLASSNAME,
                    'defname':stc.STC_RB_DEFNAME,
                    'operator':stc.STC_RB_OPERATOR,
                    'identifier':stc.STC_RB_IDENTIFIER,
                    'regex':stc.STC_RB_REGEX,
                    'global':stc.STC_RB_GLOBAL,
                    'symbol':stc.STC_RB_SYMBOL,
                    'modulename':stc.STC_RB_MODULE_NAME,
                    'instancevar':stc.STC_RB_INSTANCE_VAR,
                    'classvar':stc.STC_RB_CLASS_VAR,
                    'backticks':stc.STC_RB_BACKTICKS,
                    'datasection':stc.STC_RB_DATASECTION,
                    'heredelim':stc.STC_RB_HERE_DELIM,
                    'hereq':stc.STC_RB_HERE_Q,
                    'hereqq':stc.STC_RB_HERE_QQ,
                    'hereqx':stc.STC_RB_HERE_QX,
                    'stringq':stc.STC_RB_STRING_Q,
                    'stringqq':stc.STC_RB_STRING_QQ,
                    'stringqx':stc.STC_RB_STRING_QX,
                    'stringqr':stc.STC_RB_STRING_QR,
                    'stringqw':stc.STC_RB_STRING_QW,
                    'worddemoted':stc.STC_RB_WORD_DEMOTED,
                    'stdin':stc.STC_RB_STDIN,
                    'stdout':stc.STC_RB_STDOUT,
                    'stderr':stc.STC_RB_STDERR,
                    'upperbound':stc.STC_RB_UPPER_BOUND
                }

TCL_SYMBOLS = {     'default':stc.STC_TCL_DEFAULT,
                    'comment':stc.STC_TCL_COMMENT,
                    'commentline':stc.STC_TCL_COMMENTLINE,
                    'number':stc.STC_TCL_NUMBER,
                    'wordinquote':stc.STC_TCL_WORD_IN_QUOTE,
                    'inquote':stc.STC_TCL_IN_QUOTE,
                    'operator':stc.STC_TCL_OPERATOR,
                    'identifier':stc.STC_TCL_IDENTIFIER,
                    'substitution':stc.STC_TCL_SUBSTITUTION,
                    'subbrace':stc.STC_TCL_SUB_BRACE,
                    'modifier':stc.STC_TCL_MODIFIER,
                    'expand':stc.STC_TCL_EXPAND,
                    'word':stc.STC_TCL_WORD,
                    'word2':stc.STC_TCL_WORD2,
                    'word3':stc.STC_TCL_WORD3,
                    'word4':stc.STC_TCL_WORD4,
                    'word5':stc.STC_TCL_WORD5,
                    'word6':stc.STC_TCL_WORD6,
                    'word7':stc.STC_TCL_WORD7,
                    'word8':stc.STC_TCL_WORD8,
                    'commentbox':stc.STC_TCL_COMMENT_BOX,
                    'blockcomment':stc.STC_TCL_BLOCK_COMMENT
                }

XML_SYMBOLS = {     'default':stc.STC_H_DEFAULT,
                    'tag':stc.STC_H_TAG,
                    'tagunknown':stc.STC_H_TAGUNKNOWN,
                    'attribute':stc.STC_H_ATTRIBUTE,
                    'attributeunknown':stc.STC_H_ATTRIBUTEUNKNOWN,
                    'number':stc.STC_H_NUMBER,
                    'doublestring':stc.STC_H_DOUBLESTRING,
                    'singlestring':stc.STC_H_SINGLESTRING,
                    'other':stc.STC_H_OTHER,
                    'comment':stc.STC_H_COMMENT,
                    'entity':stc.STC_H_ENTITY,
                    'tagend':stc.STC_H_TAGEND,
                    'xmlstart':stc.STC_H_XMLSTART,
                    'xmlend':stc.STC_H_XMLEND,
                    'script':stc.STC_H_SCRIPT,
                    'asp':stc.STC_H_ASP,
                    'aspat':stc.STC_H_ASPAT,
                    'cdata':stc.STC_H_CDATA,
                    'question':stc.STC_H_QUESTION,
                    'value':stc.STC_H_VALUE,
                    'xccomment':stc.STC_H_XCCOMMENT,
                    'sgmldefault':stc.STC_H_SGML_DEFAULT,
                    'sgmlcommand':stc.STC_H_SGML_COMMAND,
                    'sgml1stparam':stc.STC_H_SGML_1ST_PARAM,
                    'sgmldoublestring':stc.STC_H_SGML_DOUBLESTRING,
                    'sgmlsimplestring':stc.STC_H_SGML_SIMPLESTRING,
                    'sgmlerror':stc.STC_H_SGML_ERROR,
                    'sgmlspecial':stc.STC_H_SGML_SPECIAL,
                    'sgmlentity':stc.STC_H_SGML_ENTITY,
                    'sgmlcomment':stc.STC_H_SGML_COMMENT,
                    'sgml1stparamcomment':stc.STC_H_SGML_1ST_PARAM_COMMENT,
                    'sgmlblockdefault':stc.STC_H_SGML_BLOCK_DEFAULT
                }

SQL_SYMBOLS = {     'character':stc.STC_SQL_CHARACTER,
                    'comment':stc.STC_SQL_COMMENT,
                    'commentdoc':stc.STC_SQL_COMMENTDOC,
                    'commentdockeyword':stc.STC_SQL_COMMENTDOCKEYWORD,
                    'commentdockeyworderror':stc.STC_SQL_COMMENTDOCKEYWORDERROR,
                    'commentline':stc.STC_SQL_COMMENTLINE,
                    'commentlinedoc':stc.STC_SQL_COMMENTLINEDOC,
                    'default':stc.STC_SQL_DEFAULT,
                    'identifier':stc.STC_SQL_IDENTIFIER,
                    'number':stc.STC_SQL_NUMBER,
                    'operator':stc.STC_SQL_OPERATOR,
                    'quotedidentifier':stc.STC_SQL_QUOTEDIDENTIFIER,
                    'sqlplus':stc.STC_SQL_SQLPLUS,
                    'sqlpluscomment':stc.STC_SQL_SQLPLUS_COMMENT,
                    'sqlplusprompt':stc.STC_SQL_SQLPLUS_PROMPT,
                    'string':stc.STC_SQL_STRING,
                    'user1':stc.STC_SQL_USER1,
                    'user2':stc.STC_SQL_USER2,
                    'user3':stc.STC_SQL_USER3,
                    'user4':stc.STC_SQL_USER4,
                    'word':stc.STC_SQL_WORD,
                    'word2':stc.STC_SQL_WORD2
                }

VB_SYMBOLS = {      'asm':stc.STC_B_ASM,
                    'binnumber':stc.STC_B_BINNUMBER,
                    'comment':stc.STC_B_COMMENT,
                    'constant':stc.STC_B_CONSTANT,
                    'date':stc.STC_B_DATE,
                    'default':stc.STC_B_DEFAULT,
                    'error':stc.STC_B_ERROR,
                    'hexnumber':stc.STC_B_HEXNUMBER,
                    'identifier':stc.STC_B_IDENTIFIER,
                    'keyword':stc.STC_B_KEYWORD,
                    'keyword2':stc.STC_B_KEYWORD2,
                    'keyword3':stc.STC_B_KEYWORD3,
                    'keyword4':stc.STC_B_KEYWORD4,
                    'label':stc.STC_B_LABEL,
                    'number':stc.STC_B_NUMBER,
                    'operator':stc.STC_B_OPERATOR,
                    'preprocessor':stc.STC_B_PREPROCESSOR,
                    'string':stc.STC_B_STRING,
                    'stringeol':stc.STC_B_STRINGEOL
                }

PROPERTIES_SYMBOLS = {   
                    'assignment':stc.STC_PROPS_ASSIGNMENT,
                    'comment':stc.STC_PROPS_COMMENT,
                    'default':stc.STC_PROPS_DEFAULT,
                    'defval':stc.STC_PROPS_DEFVAL,
                    'key':stc.STC_PROPS_KEY,
                    'section':stc.STC_PROPS_SECTION
                }

LATEX_SYMBOLS = {
                    'command':stc.STC_TEX_COMMAND,
                    'default':stc.STC_TEX_DEFAULT,
                    'group':stc.STC_TEX_GROUP,
                    'special':stc.STC_TEX_SPECIAL,
                    'symbol':stc.STC_TEX_SYMBOL,
                    'text':stc.STC_TEX_TEXT
                }

LUA_SYMBOLS = {
                    'character':stc.STC_LUA_CHARACTER,
                    'comment':stc.STC_LUA_COMMENT,
                    'commentdoc':stc.STC_LUA_COMMENTDOC,
                    'commentline':stc.STC_LUA_COMMENTLINE,
                    'default':stc.STC_LUA_DEFAULT,
                    'identifier':stc.STC_LUA_IDENTIFIER,
                    'literalstring':stc.STC_LUA_LITERALSTRING,
                    'number':stc.STC_LUA_NUMBER,
                    'operator':stc.STC_LUA_OPERATOR,
                    'preprocessor':stc.STC_LUA_PREPROCESSOR,
                    'string':stc.STC_LUA_STRING,
                    'stringeol':stc.STC_LUA_STRINGEOL,
                    'word':stc.STC_LUA_WORD,
                    'word2':stc.STC_LUA_WORD2,
                    'word3':stc.STC_LUA_WORD3,
                    'word4':stc.STC_LUA_WORD4,
                    'word5':stc.STC_LUA_WORD5,
                    'word6':stc.STC_LUA_WORD6,
                    'word7':stc.STC_LUA_WORD7,
                    'word8':stc.STC_LUA_WORD8
                }

MAKEFILE_SYMBOLS = {
                    'comment':stc.STC_MAKE_COMMENT,
                    'default':stc.STC_MAKE_DEFAULT,
                    'identifier':stc.STC_MAKE_IDENTIFIER,
                    'ideol':stc.STC_MAKE_IDEOL,
                    'operator':stc.STC_MAKE_OPERATOR,
                    'preprocessor':stc.STC_MAKE_PREPROCESSOR,
                    'target':stc.STC_MAKE_TARGET
                }

DIFF_SYMBOLS = {
                    'added':stc.STC_DIFF_ADDED,
                    'command':stc.STC_DIFF_COMMAND,
                    'comment':stc.STC_DIFF_COMMENT,
                    'default':stc.STC_DIFF_DEFAULT,
                    'deleted':stc.STC_DIFF_DELETED,
                    'header':stc.STC_DIFF_HEADER,
                    'position':stc.STC_DIFF_POSITION,
                }

PASCAL_SYMBOLS = {
                    'character':stc.STC_C_CHARACTER,
                    'comment':stc.STC_C_COMMENT,
                    'commentdoc':stc.STC_C_COMMENTDOC,
                    'commentdockeyword':stc.STC_C_COMMENTDOCKEYWORD,
                    'commentdockeyworderror':stc.STC_C_COMMENTDOCKEYWORDERROR,
                    'commentline':stc.STC_C_COMMENTLINE,
                    'commentlinedoc':stc.STC_C_COMMENTLINEDOC,
                    'default':stc.STC_C_DEFAULT,
                    'globalclass':stc.STC_C_GLOBALCLASS,
                    'identifier':stc.STC_C_IDENTIFIER,
                    'number':stc.STC_C_NUMBER,
                    'operator':stc.STC_C_OPERATOR,
                    'preprocessor':stc.STC_C_PREPROCESSOR,
                    'regex':stc.STC_C_REGEX,
                    'string':stc.STC_C_STRING,
                    'stringeol':stc.STC_C_STRINGEOL,
                    'uuid':stc.STC_C_UUID,
                    'verbatim':stc.STC_C_VERBATIM,
                    'word':stc.STC_C_WORD,
                    'word2':stc.STC_C_WORD2
                }

LISP_SYMBOLS = {
                    'comment':stc.STC_LISP_COMMENT,
                    'default':stc.STC_LISP_DEFAULT,
                    'identifier':stc.STC_LISP_IDENTIFIER,
                    'keyword':stc.STC_LISP_KEYWORD,
                    'keywordkw':stc.STC_LISP_KEYWORD_KW,
                    'multicomment':stc.STC_LISP_MULTI_COMMENT,
                    'number':stc.STC_LISP_NUMBER,
                    'operator':stc.STC_LISP_OPERATOR,
                    'special':stc.STC_LISP_SPECIAL,
                    'string':stc.STC_LISP_STRING,
                    'stringeol':stc.STC_LISP_STRINGEOL,
                    'symbol':stc.STC_LISP_SYMBOL
                }

EIFFEL_SYMBOLS = {
                    'character':stc.STC_EIFFEL_CHARACTER,
                    'commentline':stc.STC_EIFFEL_COMMENTLINE,
                    'default':stc.STC_EIFFEL_DEFAULT,
                    'identifier':stc.STC_EIFFEL_IDENTIFIER,
                    'number':stc.STC_EIFFEL_NUMBER,
                    'operator':stc.STC_EIFFEL_OPERATOR,
                    'string':stc.STC_EIFFEL_STRING,
                    'stringeol':stc.STC_EIFFEL_STRINGEOL,
                    'word':stc.STC_EIFFEL_WORD
                }

TCL_SYMBOLS = {
                    'blockcomment':stc.STC_TCL_BLOCK_COMMENT,
                    'comment':stc.STC_TCL_COMMENT,
                    'commentline':stc.STC_TCL_COMMENTLINE,
                    'commentbox':stc.STC_TCL_COMMENT_BOX,
                    'default':stc.STC_TCL_DEFAULT,
                    'expand':stc.STC_TCL_EXPAND,
                    'identifier':stc.STC_TCL_IDENTIFIER,
                    'inquote':stc.STC_TCL_IN_QUOTE,
                    'modifier':stc.STC_TCL_MODIFIER,
                    'number':stc.STC_TCL_NUMBER,
                    'operator':stc.STC_TCL_OPERATOR,
                    'substitution':stc.STC_TCL_SUBSTITUTION,
                    'subbrace':stc.STC_TCL_SUB_BRACE,
                    'word':stc.STC_TCL_WORD,
                    'word2':stc.STC_TCL_WORD2,
                    'word3':stc.STC_TCL_WORD3,
                    'word4':stc.STC_TCL_WORD4,
                    'word5':stc.STC_TCL_WORD5,
                    'word6':stc.STC_TCL_WORD6,
                    'word7':stc.STC_TCL_WORD7,
                    'word8':stc.STC_TCL_WORD8,
                    'wordinquote':stc.STC_TCL_WORD_IN_QUOTE
                }

NNCRONTAB_SYMBOLS = {
                    'asterisk':stc.STC_NNCRONTAB_ASTERISK,
                    'comment':stc.STC_NNCRONTAB_COMMENT,
                    'default':stc.STC_NNCRONTAB_DEFAULT,
                    'environment':stc.STC_NNCRONTAB_ENVIRONMENT,
                    'identifier':stc.STC_NNCRONTAB_IDENTIFIER,
                    'keyword':stc.STC_NNCRONTAB_KEYWORD,
                    'modifier':stc.STC_NNCRONTAB_MODIFIER,
                    'number':stc.STC_NNCRONTAB_NUMBER,
                    'section':stc.STC_NNCRONTAB_SECTION,
                    'string':stc.STC_NNCRONTAB_STRING,
                    'task':stc.STC_NNCRONTAB_TASK
                }

MATLAB_SYMBOLS = {
                    'command':stc.STC_MATLAB_COMMAND,
                    'comment':stc.STC_MATLAB_COMMENT,
                    'default':stc.STC_MATLAB_DEFAULT,
                    'doublequotestring':stc.STC_MATLAB_DOUBLEQUOTESTRING,
                    'identifier':stc.STC_MATLAB_IDENTIFIER,
                    'keyword':stc.STC_MATLAB_KEYWORD,
                    'number':stc.STC_MATLAB_NUMBER,
                    'operator':stc.STC_MATLAB_OPERATOR,
                    'string':stc.STC_MATLAB_STRING
                }

VBSCRIPT_SYMBOLS = {
                    'asm':stc.STC_B_ASM,
                    'binnumber':stc.STC_B_BINNUMBER,
                    'comment':stc.STC_B_COMMENT,
                    'constant':stc.STC_B_CONSTANT,
                    'date':stc.STC_B_DATE,
                    'default':stc.STC_B_DEFAULT,
                    'error':stc.STC_B_ERROR,
                    'hexnumber':stc.STC_B_HEXNUMBER,
                    'identifier':stc.STC_B_IDENTIFIER,
                    'keyword':stc.STC_B_KEYWORD,
                    'keyword2':stc.STC_B_KEYWORD2,
                    'keyword3':stc.STC_B_KEYWORD3,
                    'keyword4':stc.STC_B_KEYWORD4,
                    'label':stc.STC_B_LABEL,
                    'number':stc.STC_B_NUMBER,
                    'operator':stc.STC_B_OPERATOR,
                    'preprocessor':stc.STC_B_PREPROCESSOR,
                    'string':stc.STC_B_STRING,
                    'stringeol':stc.STC_B_STRINGEOL
                }

SCRIPTOL_SYMBOLS = {
                    'character':stc.STC_SCRIPTOL_CHARACTER,
                    'classname':stc.STC_SCRIPTOL_CLASSNAME,
                    'commentblock':stc.STC_SCRIPTOL_COMMENTBLOCK,
                    'commentline':stc.STC_SCRIPTOL_COMMENTLINE,
                    'cstyle':stc.STC_SCRIPTOL_CSTYLE,
                    'default':stc.STC_SCRIPTOL_DEFAULT,
                    'identifier':stc.STC_SCRIPTOL_IDENTIFIER,
                    'keyword':stc.STC_SCRIPTOL_KEYWORD,
                    'number':stc.STC_SCRIPTOL_NUMBER,
                    'operator':stc.STC_SCRIPTOL_OPERATOR,
                    'persistent':stc.STC_SCRIPTOL_PERSISTENT,
                    'preprocessor':stc.STC_SCRIPTOL_PREPROCESSOR,
                    'string':stc.STC_SCRIPTOL_STRING,
                    'stringeol':stc.STC_SCRIPTOL_STRINGEOL,
                    'triple':stc.STC_SCRIPTOL_TRIPLE,
                    'white':stc.STC_SCRIPTOL_WHITE
                }

FORTRAN_SYMBOLS = {
                    'comment':stc.STC_F_COMMENT,
                    'continuation':stc.STC_F_CONTINUATION,
                    'default':stc.STC_F_DEFAULT,
                    'identifier':stc.STC_F_IDENTIFIER,
                    'label':stc.STC_F_LABEL,
                    'number':stc.STC_F_NUMBER,
                    'operator':stc.STC_F_OPERATOR,
                    'operator2':stc.STC_F_OPERATOR2,
                    'preprocessor':stc.STC_F_PREPROCESSOR,
                    'string1':stc.STC_F_STRING1,
                    'string2':stc.STC_F_STRING2,
                    'stringeol':stc.STC_F_STRINGEOL,
                    'word':stc.STC_F_WORD,
                    'word2':stc.STC_F_WORD2,
                    'word3':stc.STC_F_WORD3
                }

F77_SYMBOLS = {
                    'comment':stc.STC_F_COMMENT,
                    'continuation':stc.STC_F_CONTINUATION,
                    'default':stc.STC_F_DEFAULT,
                    'identifier':stc.STC_F_IDENTIFIER,
                    'label':stc.STC_F_LABEL,
                    'number':stc.STC_F_NUMBER,
                    'operator':stc.STC_F_OPERATOR,
                    'operator2':stc.STC_F_OPERATOR2,
                    'preprocessor':stc.STC_F_PREPROCESSOR,
                    'string1':stc.STC_F_STRING1,
                    'string2':stc.STC_F_STRING2,
                    'stringeol':stc.STC_F_STRINGEOL,
                    'word':stc.STC_F_WORD,
                    'word2':stc.STC_F_WORD2,
                    'word3':stc.STC_F_WORD3
                }

POV_SYMBOLS = {
                    'baddirective':stc.STC_POV_BADDIRECTIVE,
                    'comment':stc.STC_POV_COMMENT,
                    'commentline':stc.STC_POV_COMMENTLINE,
                    'default':stc.STC_POV_DEFAULT,
                    'directive':stc.STC_POV_DIRECTIVE,
                    'identifier':stc.STC_POV_IDENTIFIER,
                    'number':stc.STC_POV_NUMBER,
                    'operator':stc.STC_POV_OPERATOR,
                    'string':stc.STC_POV_STRING,
                    'stringeol':stc.STC_POV_STRINGEOL,
                    'word2':stc.STC_POV_WORD2,
                    'word3':stc.STC_POV_WORD3,
                    'word4':stc.STC_POV_WORD4,
                    'word5':stc.STC_POV_WORD5,
                    'word6':stc.STC_POV_WORD6,
                    'word7':stc.STC_POV_WORD7,
                    'word8':stc.STC_POV_WORD8
                }

LOUT_SYMBOLS = {
                    'comment':stc.STC_LOUT_COMMENT,
                    'default':stc.STC_LOUT_DEFAULT,
                    'identifier':stc.STC_LOUT_IDENTIFIER,
                    'number':stc.STC_LOUT_NUMBER,
                    'operator':stc.STC_LOUT_OPERATOR,
                    'string':stc.STC_LOUT_STRING,
                    'stringeol':stc.STC_LOUT_STRINGEOL,
                    'word':stc.STC_LOUT_WORD,
                    'word2':stc.STC_LOUT_WORD2,
                    'word3':stc.STC_LOUT_WORD3,
                    'word4':stc.STC_LOUT_WORD4,
                }

ESCRIPT_SYMBOLS = {
                    'brace':stc.STC_ESCRIPT_BRACE,
                    'comment':stc.STC_ESCRIPT_COMMENT,
                    'commentdoc':stc.STC_ESCRIPT_COMMENTDOC,
                    'commentline':stc.STC_ESCRIPT_COMMENTLINE,
                    'default':stc.STC_ESCRIPT_DEFAULT,
                    'identifier':stc.STC_ESCRIPT_IDENTIFIER,
                    'number':stc.STC_ESCRIPT_NUMBER,
                    'operator':stc.STC_ESCRIPT_OPERATOR,
                    'string':stc.STC_ESCRIPT_STRING,
                    'word':stc.STC_ESCRIPT_WORD,
                    'word2':stc.STC_ESCRIPT_WORD2,
                    'word3':stc.STC_ESCRIPT_WORD3,
                }

PS_SYMBOLS = {
                    'badstringchar':stc.STC_PS_BADSTRINGCHAR,
                    'base85string':stc.STC_PS_BASE85STRING,
                    'comment':stc.STC_PS_COMMENT,
                    'default':stc.STC_PS_DEFAULT,
                    'dsccomment':stc.STC_PS_DSC_COMMENT,
                    'dscvalue':stc.STC_PS_DSC_VALUE,
                    'hexstring':stc.STC_PS_HEXSTRING,
                    'immeval':stc.STC_PS_IMMEVAL,
                    'keyword':stc.STC_PS_KEYWORD,
                    'literal':stc.STC_PS_LITERAL,
                    'name':stc.STC_PS_NAME,
                    'number':stc.STC_PS_NUMBER,
                    'parenarray':stc.STC_PS_PAREN_ARRAY,
                    'parendict':stc.STC_PS_PAREN_DICT,
                    'parenproc':stc.STC_PS_PAREN_PROC,
                    'text':stc.STC_PS_TEXT,
                }

NSIS_SYMBOLS = {
                    'comment':stc.STC_NSIS_COMMENT,
                    'commentbox':stc.STC_NSIS_COMMENTBOX,
                    'default':stc.STC_NSIS_DEFAULT,
                    'function':stc.STC_NSIS_FUNCTION,
                    'functiondef':stc.STC_NSIS_FUNCTIONDEF,
                    'ifdefinedef':stc.STC_NSIS_IFDEFINEDEF,
                    'label':stc.STC_NSIS_LABEL,
                    'macrodef':stc.STC_NSIS_MACRODEF,
                    'number':stc.STC_NSIS_NUMBER,
                    'pageex':stc.STC_NSIS_PAGEEX,
                    'sectiondef':stc.STC_NSIS_SECTIONDEF,
                    'sectiongroup':stc.STC_NSIS_SECTIONGROUP,
                    'stringdq':stc.STC_NSIS_STRINGDQ,
                    'stringlq':stc.STC_NSIS_STRINGLQ,
                    'stringrq':stc.STC_NSIS_STRINGRQ,
                    'stringvar':stc.STC_NSIS_STRINGVAR,
                    'subsectiondef':stc.STC_NSIS_SUBSECTIONDEF,
                    'userdefined':stc.STC_NSIS_USERDEFINED,
                    'variable':stc.STC_NSIS_VARIABLE,
                }

MMIXAL_SYMBOLS = {
                    'char':stc.STC_MMIXAL_CHAR,
                    'comment':stc.STC_MMIXAL_COMMENT,
                    'hex':stc.STC_MMIXAL_HEX,
                    'include':stc.STC_MMIXAL_INCLUDE,
                    'label':stc.STC_MMIXAL_LABEL,
                    'leadws':stc.STC_MMIXAL_LEADWS,
                    'number':stc.STC_MMIXAL_NUMBER,
                    'opcode':stc.STC_MMIXAL_OPCODE,
                    'opcodepost':stc.STC_MMIXAL_OPCODE_POST,
                    'opcodepre':stc.STC_MMIXAL_OPCODE_PRE,
                    'opcodeunknown':stc.STC_MMIXAL_OPCODE_UNKNOWN,
                    'opcodevalid':stc.STC_MMIXAL_OPCODE_VALID,
                    'operands':stc.STC_MMIXAL_OPERANDS,
                    'operator':stc.STC_MMIXAL_OPERATOR,
                    'ref':stc.STC_MMIXAL_REF,
                    'register':stc.STC_MMIXAL_REGISTER,
                    'string':stc.STC_MMIXAL_STRING,
                    'symbol':stc.STC_MMIXAL_SYMBOL,
                }

LOT_SYMBOLS = {
                    'abort':stc.STC_LOT_ABORT,
                    'break':stc.STC_LOT_BREAK,
                    'default':stc.STC_LOT_DEFAULT,
                    'fail':stc.STC_LOT_FAIL,
                    'header':stc.STC_LOT_HEADER,
                    'pass':stc.STC_LOT_PASS,
                    'set':stc.STC_LOT_SET,
                }

YAML_SYMBOLS = {
                    'comment':stc.STC_YAML_COMMENT,
                    'default':stc.STC_YAML_DEFAULT,
                    'document':stc.STC_YAML_DOCUMENT,
                    'error':stc.STC_YAML_ERROR,
                    'identifier':stc.STC_YAML_IDENTIFIER,
                    'keyword':stc.STC_YAML_KEYWORD,
                    'number':stc.STC_YAML_NUMBER,
                    'reference':stc.STC_YAML_REFERENCE,
                    'text':stc.STC_YAML_TEXT,
                }

TEX_SYMBOLS = {
                    'command':stc.STC_TEX_COMMAND,
                    'default':stc.STC_TEX_DEFAULT,
                    'group':stc.STC_TEX_GROUP,
                    'special':stc.STC_TEX_SPECIAL,
                    'symbol':stc.STC_TEX_SYMBOL,
                    'text':stc.STC_TEX_TEXT,
                }

METAPOST_SYMBOLS = {
                    'command':stc.STC_METAPOST_COMMAND,
                    'default':stc.STC_METAPOST_DEFAULT,
                    'extra':stc.STC_METAPOST_EXTRA,
                    'group':stc.STC_METAPOST_GROUP,
                    'special':stc.STC_METAPOST_SPECIAL,
                    'symbol':stc.STC_METAPOST_SYMBOL,
                    'text':stc.STC_METAPOST_TEXT,
                }

FORTH_SYMBOLS = {
                    'comment':stc.STC_FORTH_COMMENT,
                    'commentml':stc.STC_FORTH_COMMENT_ML,
                    'control':stc.STC_FORTH_CONTROL,
                    'default':stc.STC_FORTH_DEFAULT,
                    'defword':stc.STC_FORTH_DEFWORD,
                    'identifier':stc.STC_FORTH_IDENTIFIER,
                    'keyword':stc.STC_FORTH_KEYWORD,
                    'locale':stc.STC_FORTH_LOCALE,
                    'number':stc.STC_FORTH_NUMBER,
                    'preword1':stc.STC_FORTH_PREWORD1,
                    'preword2':stc.STC_FORTH_PREWORD2,
                    'string':stc.STC_FORTH_STRING,
                }

ERLANG_SYMBOLS = {
                    'atom':stc.STC_ERLANG_ATOM,
                    'character':stc.STC_ERLANG_CHARACTER,
                    'comment':stc.STC_ERLANG_COMMENT,
                    'default':stc.STC_ERLANG_DEFAULT,
                    'functionname':stc.STC_ERLANG_FUNCTION_NAME,
                    'keyword':stc.STC_ERLANG_KEYWORD,
                    'macro':stc.STC_ERLANG_MACRO,
                    'nodename':stc.STC_ERLANG_NODE_NAME,
                    'number':stc.STC_ERLANG_NUMBER,
                    'operator':stc.STC_ERLANG_OPERATOR,
                    'record':stc.STC_ERLANG_RECORD,
                    'separator':stc.STC_ERLANG_SEPARATOR,
                    'string':stc.STC_ERLANG_STRING,
                    'unknown':stc.STC_ERLANG_UNKNOWN,
                    'variable':stc.STC_ERLANG_VARIABLE,
                }

OCTAVE_SYMBOLS = {
                    'command':stc.STC_MATLAB_COMMAND,
                    'comment':stc.STC_MATLAB_COMMENT,
                    'default':stc.STC_MATLAB_DEFAULT,
                    'doublequotestring':stc.STC_MATLAB_DOUBLEQUOTESTRING,
                    'identifier':stc.STC_MATLAB_IDENTIFIER,
                    'keyword':stc.STC_MATLAB_KEYWORD,
                    'number':stc.STC_MATLAB_NUMBER,
                    'operator':stc.STC_MATLAB_OPERATOR,
                    'string':stc.STC_MATLAB_STRING,
                }

MSSQL_SYMBOLS = {
                    'columnname':stc.STC_MSSQL_COLUMN_NAME,
                    'columnname2':stc.STC_MSSQL_COLUMN_NAME_2,
                    'comment':stc.STC_MSSQL_COMMENT,
                    'datatype':stc.STC_MSSQL_DATATYPE,
                    'default':stc.STC_MSSQL_DEFAULT,
                    'defaultprefdatatype':stc.STC_MSSQL_DEFAULT_PREF_DATATYPE,
                    'function':stc.STC_MSSQL_FUNCTION,
                    'globalvariable':stc.STC_MSSQL_GLOBAL_VARIABLE,
                    'identifier':stc.STC_MSSQL_IDENTIFIER,
                    'linecomment':stc.STC_MSSQL_LINE_COMMENT,
                    'number':stc.STC_MSSQL_NUMBER,
                    'operator':stc.STC_MSSQL_OPERATOR,
                    'statement':stc.STC_MSSQL_STATEMENT,
                    'storedprocedure':stc.STC_MSSQL_STORED_PROCEDURE,
                    'string':stc.STC_MSSQL_STRING,
                    'systable':stc.STC_MSSQL_SYSTABLE,
                    'variable':stc.STC_MSSQL_VARIABLE,
                }

VERILOG_SYMBOLS = {
                    'comment':stc.STC_V_COMMENT,
                    'commentline':stc.STC_V_COMMENTLINE,
                    'commentlinebang':stc.STC_V_COMMENTLINEBANG,
                    'default':stc.STC_V_DEFAULT,
                    'identifier':stc.STC_V_IDENTIFIER,
                    'number':stc.STC_V_NUMBER,
                    'operator':stc.STC_V_OPERATOR,
                    'preprocessor':stc.STC_V_PREPROCESSOR,
                    'string':stc.STC_V_STRING,
                    'stringeol':stc.STC_V_STRINGEOL,
                    'user':stc.STC_V_USER,
                    'word':stc.STC_V_WORD,
                    'word2':stc.STC_V_WORD2,
                    'word3':stc.STC_V_WORD3,
                }

KIX_SYMBOLS = {
                    'comment':stc.STC_KIX_COMMENT,
                    'default':stc.STC_KIX_DEFAULT,
                    'functions':stc.STC_KIX_FUNCTIONS,
                    'identifier':stc.STC_KIX_IDENTIFIER,
                    'keyword':stc.STC_KIX_KEYWORD,
                    'macro':stc.STC_KIX_MACRO,
                    'number':stc.STC_KIX_NUMBER,
                    'operator':stc.STC_KIX_OPERATOR,
                    'string1':stc.STC_KIX_STRING1,
                    'string2':stc.STC_KIX_STRING2,
                    'var':stc.STC_KIX_VAR,
                }

GUI4CLI_SYMBOLS = {
                    'attribute':stc.STC_GC_ATTRIBUTE,
                    'command':stc.STC_GC_COMMAND,
                    'commentblock':stc.STC_GC_COMMENTBLOCK,
                    'commentline':stc.STC_GC_COMMENTLINE,
                    'control':stc.STC_GC_CONTROL,
                    'default':stc.STC_GC_DEFAULT,
                    'event':stc.STC_GC_EVENT,
                    'global':stc.STC_GC_GLOBAL,
                    'operator':stc.STC_GC_OPERATOR,
                    'string':stc.STC_GC_STRING,
                }

VHDL_SYMBOLS = {
                    'attribute':stc.STC_VHDL_ATTRIBUTE,
                    'comment':stc.STC_VHDL_COMMENT,
                    'commentlinebang':stc.STC_VHDL_COMMENTLINEBANG,
                    'default':stc.STC_VHDL_DEFAULT,
                    'identifier':stc.STC_VHDL_IDENTIFIER,
                    'keyword':stc.STC_VHDL_KEYWORD,
                    'number':stc.STC_VHDL_NUMBER,
                    'operator':stc.STC_VHDL_OPERATOR,
                    'stdfunction':stc.STC_VHDL_STDFUNCTION,
                    'stdoperator':stc.STC_VHDL_STDOPERATOR,
                    'stdpackage':stc.STC_VHDL_STDPACKAGE,
                    'stdtype':stc.STC_VHDL_STDTYPE,
                    'string':stc.STC_VHDL_STRING,
                    'stringeol':stc.STC_VHDL_STRINGEOL,
                    'userword':stc.STC_VHDL_USERWORD,
                }

HASKELL_SYMBOLS = {
                    'capital':stc.STC_HA_CAPITAL,
                    'character':stc.STC_HA_CHARACTER,
                    'class':stc.STC_HA_CLASS,
                    'commentblock':stc.STC_HA_COMMENTBLOCK,
                    'commentblock2':stc.STC_HA_COMMENTBLOCK2,
                    'commentblock3':stc.STC_HA_COMMENTBLOCK3,
                    'commentline':stc.STC_HA_COMMENTLINE,
                    'data':stc.STC_HA_DATA,
                    'default':stc.STC_HA_DEFAULT,
                    'identifier':stc.STC_HA_IDENTIFIER,
                    'import':stc.STC_HA_IMPORT,
                    'instance':stc.STC_HA_INSTANCE,
                    'keyword':stc.STC_HA_KEYWORD,
                    'module':stc.STC_HA_MODULE,
                    'number':stc.STC_HA_NUMBER,
                    'operator':stc.STC_HA_OPERATOR,
                    'string':stc.STC_HA_STRING,
                }

REBOL_SYMBOLS = {
                    'binary':stc.STC_REBOL_BINARY,
                    'bracedstring':stc.STC_REBOL_BRACEDSTRING,
                    'character':stc.STC_REBOL_CHARACTER,
                    'commentblock':stc.STC_REBOL_COMMENTBLOCK,
                    'commentline':stc.STC_REBOL_COMMENTLINE,
                    'date':stc.STC_REBOL_DATE,
                    'default':stc.STC_REBOL_DEFAULT,
                    'email':stc.STC_REBOL_EMAIL,
                    'file':stc.STC_REBOL_FILE,
                    'identifier':stc.STC_REBOL_IDENTIFIER,
                    'issue':stc.STC_REBOL_ISSUE,
                    'money':stc.STC_REBOL_MONEY,
                    'number':stc.STC_REBOL_NUMBER,
                    'operator':stc.STC_REBOL_OPERATOR,
                    'pair':stc.STC_REBOL_PAIR,
                    'preface':stc.STC_REBOL_PREFACE,
                    'quotedstring':stc.STC_REBOL_QUOTEDSTRING,
                    'tag':stc.STC_REBOL_TAG,
                    'time':stc.STC_REBOL_TIME,
                    'tuple':stc.STC_REBOL_TUPLE,
                    'url':stc.STC_REBOL_URL,
                    'word':stc.STC_REBOL_WORD,
                    'word2':stc.STC_REBOL_WORD2,
                    'word3':stc.STC_REBOL_WORD3,
                    'word4':stc.STC_REBOL_WORD4,
                    'word5':stc.STC_REBOL_WORD5,
                    'word6':stc.STC_REBOL_WORD6,
                    'word7':stc.STC_REBOL_WORD7,
                    'word8':stc.STC_REBOL_WORD8,
                }

SMALLTALK_SYMBOLS = {
                    'assign':stc.STC_ST_ASSIGN,
                    'binary':stc.STC_ST_BINARY,
                    'bool':stc.STC_ST_BOOL,
                    'character':stc.STC_ST_CHARACTER,
                    'comment':stc.STC_ST_COMMENT,
                    'default':stc.STC_ST_DEFAULT,
                    'global':stc.STC_ST_GLOBAL,
                    'kwsend':stc.STC_ST_KWSEND,
                    'nil':stc.STC_ST_NIL,
                    'number':stc.STC_ST_NUMBER,
                    'return':stc.STC_ST_RETURN,
                    'self':stc.STC_ST_SELF,
                    'special':stc.STC_ST_SPECIAL,
                    'specsel':stc.STC_ST_SPEC_SEL,
                    'string':stc.STC_ST_STRING,
                    'super':stc.STC_ST_SUPER,
                    'symbol':stc.STC_ST_SYMBOL,
                }

FLAGSHIP_SYMBOLS = {
                    'asm':stc.STC_FS_ASM,
                    'binnumber':stc.STC_FS_BINNUMBER,
                    'comment':stc.STC_FS_COMMENT,
                    'commentdoc':stc.STC_FS_COMMENTDOC,
                    'commentdockeyword':stc.STC_FS_COMMENTDOCKEYWORD,
                    'commentdockeyworderror':stc.STC_FS_COMMENTDOCKEYWORDERROR,
                    'commentline':stc.STC_FS_COMMENTLINE,
                    'commentlinedoc':stc.STC_FS_COMMENTLINEDOC,
                    'constant':stc.STC_FS_CONSTANT,
                    'date':stc.STC_FS_DATE,
                    'default':stc.STC_FS_DEFAULT,
                    'error':stc.STC_FS_ERROR,
                    'hexnumber':stc.STC_FS_HEXNUMBER,
                    'identifier':stc.STC_FS_IDENTIFIER,
                    'keyword':stc.STC_FS_KEYWORD,
                    'keyword2':stc.STC_FS_KEYWORD2,
                    'keyword3':stc.STC_FS_KEYWORD3,
                    'keyword4':stc.STC_FS_KEYWORD4,
                    'label':stc.STC_FS_LABEL,
                    'number':stc.STC_FS_NUMBER,
                    'operator':stc.STC_FS_OPERATOR,
                    'preprocessor':stc.STC_FS_PREPROCESSOR,
                    'string':stc.STC_FS_STRING,
                    'stringeol':stc.STC_FS_STRINGEOL,
                }

INNOSETUP_SYMBOLS = {
                    'comment':stc.STC_INNO_COMMENT,
                    'commentpascal':stc.STC_INNO_COMMENT_PASCAL,
                    'default':stc.STC_INNO_DEFAULT,
                    'identifier':stc.STC_INNO_IDENTIFIER,
                    'keyword':stc.STC_INNO_KEYWORD,
                    'keywordpascal':stc.STC_INNO_KEYWORD_PASCAL,
                    'keyworduser':stc.STC_INNO_KEYWORD_USER,
                    'parameter':stc.STC_INNO_PARAMETER,
                    'preproc':stc.STC_INNO_PREPROC,
                    'preprocinline':stc.STC_INNO_PREPROC_INLINE,
                    'section':stc.STC_INNO_SECTION,
                    'stringdouble':stc.STC_INNO_STRING_DOUBLE,
                    'stringsingle':stc.STC_INNO_STRING_SINGLE,
                }

OPAL_SYMBOLS = {
                    'boolconst':stc.STC_OPAL_BOOL_CONST,
                    'commentblock':stc.STC_OPAL_COMMENT_BLOCK,
                    'commentline':stc.STC_OPAL_COMMENT_LINE,
                    'default':stc.STC_OPAL_DEFAULT,
                    'integer':stc.STC_OPAL_INTEGER,
                    'keyword':stc.STC_OPAL_KEYWORD,
                    'par':stc.STC_OPAL_PAR,
                    'sort':stc.STC_OPAL_SORT,
                    'space':stc.STC_OPAL_SPACE,
                    'string':stc.STC_OPAL_STRING,
                }

SPICE_SYMBOLS = {
                    'commentline':stc.STC_SPICE_COMMENTLINE,
                    'default':stc.STC_SPICE_DEFAULT,
                    'delimiter':stc.STC_SPICE_DELIMITER,
                    'identifier':stc.STC_SPICE_IDENTIFIER,
                    'keyword':stc.STC_SPICE_KEYWORD,
                    'keyword2':stc.STC_SPICE_KEYWORD2,
                    'keyword3':stc.STC_SPICE_KEYWORD3,
                    'number':stc.STC_SPICE_NUMBER,
                    'value':stc.STC_SPICE_VALUE,
                }


'''
symbols' map for all languages
'''
SYMBOLS = { stc.STC_LEX_NULL:NULL_SYMBOLS,
            stc.STC_LEX_ADA:ADA_SYMBOLS,
            stc.STC_LEX_APDL:APDL_SYMBOLS,
            stc.STC_LEX_ASM:ASM_SYMBOLS,
            stc.STC_LEX_ASN1:ASN1_SYMBOLS,
            stc.STC_LEX_AU3:AU3_SYMBOLS,
            stc.STC_LEX_AVE:AVE_SYMBOLS,
            stc.STC_LEX_BAAN:BAAN_SYMBOLS,
            stc.STC_LEX_BASH:BASH_SYMBOLS,
            stc.STC_LEX_BATCH:BATCH_SYMBOLS,
            stc.STC_LEX_CAML:CAML_SYMBOLS,
            stc.STC_LEX_CLW:CLW_SYMBOLS,
            stc.STC_LEX_CONF:CONF_SYMBOLS,
            stc.STC_LEX_CPP:CPP_SYMBOLS,
            stc.STC_LEX_CSOUND:CSOUND_SYMBOLS,
            stc.STC_LEX_CSS:CSS_SYMBOLS,
            stc.STC_LEX_DIFF:DIFF_SYMBOLS,
            stc.STC_LEX_EIFFEL:EIFFEL_SYMBOLS,
            stc.STC_LEX_ERLANG:ERLANG_SYMBOLS,
            stc.STC_LEX_ESCRIPT:ESCRIPT_SYMBOLS,
            stc.STC_LEX_F77:F77_SYMBOLS,
            stc.STC_LEX_FLAGSHIP:FLAGSHIP_SYMBOLS,
            stc.STC_LEX_FORTH:FORTH_SYMBOLS,
            stc.STC_LEX_FORTRAN:FORTRAN_SYMBOLS,
            stc.STC_LEX_GUI4CLI:GUI4CLI_SYMBOLS,
            stc.STC_LEX_HASKELL:HASKELL_SYMBOLS,
            stc.STC_LEX_HTML:HTML_SYMBOLS,
            stc.STC_LEX_INNOSETUP:INNOSETUP_SYMBOLS,
            stc.STC_LEX_KIX:KIX_SYMBOLS,
            stc.STC_LEX_LATEX:LATEX_SYMBOLS,
            stc.STC_LEX_LISP:LISP_SYMBOLS,
            stc.STC_LEX_LOT:LOT_SYMBOLS,
            stc.STC_LEX_LOUT:LOUT_SYMBOLS,
            stc.STC_LEX_LUA:LUA_SYMBOLS,
            stc.STC_LEX_MAKEFILE:MAKEFILE_SYMBOLS,
            stc.STC_LEX_MATLAB:MATLAB_SYMBOLS,
            stc.STC_LEX_METAPOST:METAPOST_SYMBOLS,
            stc.STC_LEX_MMIXAL:MMIXAL_SYMBOLS,
            stc.STC_LEX_MSSQL:MSSQL_SYMBOLS,
            stc.STC_LEX_NNCRONTAB:NNCRONTAB_SYMBOLS,
            stc.STC_LEX_NSIS:NSIS_SYMBOLS,
            stc.STC_LEX_OCTAVE:OCTAVE_SYMBOLS,
            stc.STC_LEX_OPAL:OPAL_SYMBOLS,
            stc.STC_LEX_PASCAL:PASCAL_SYMBOLS,
            stc.STC_LEX_PERL:PERL_SYMBOLS,
            stc.STC_LEX_PROPERTIES:PROPERTIES_SYMBOLS,
            stc.STC_LEX_PYTHON:PYTHON_SYMBOLS,
            stc.STC_LEX_POV:POV_SYMBOLS,
            stc.STC_LEX_PS:PS_SYMBOLS,
            stc.STC_LEX_REBOL:REBOL_SYMBOLS,
            stc.STC_LEX_RUBY:RUBY_SYMBOLS,
            stc.STC_LEX_SCRIPTOL:SCRIPTOL_SYMBOLS,
            stc.STC_LEX_SMALLTALK:SMALLTALK_SYMBOLS,
            stc.STC_LEX_SPICE:SPICE_SYMBOLS,
            stc.STC_LEX_SQL:SQL_SYMBOLS,
            stc.STC_LEX_TCL:TCL_SYMBOLS,
            stc.STC_LEX_TEX:TEX_SYMBOLS,
            stc.STC_LEX_VB:VB_SYMBOLS,
            stc.STC_LEX_VBSCRIPT:VBSCRIPT_SYMBOLS,
            stc.STC_LEX_VERILOG:VERILOG_SYMBOLS,
            stc.STC_LEX_VHDL:VHDL_SYMBOLS,
            stc.STC_LEX_XML:XML_SYMBOLS,
            stc.STC_LEX_YAML:YAML_SYMBOLS}